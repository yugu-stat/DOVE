// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// BS
arma::rowvec BS(double t, arma::vec knots, bool constantVE);
RcppExport SEXP _DOVE_BS(SEXP tSEXP, SEXP knotsSEXP, SEXP constantVESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    rcpp_result_gen = Rcpp::wrap(BS(t, knots, constantVE));
    return rcpp_result_gen;
END_RCPP
}
// Cox
List Cox(arma::vec& beta, arma::vec& gamma, const arma::vec& time, const arma::ivec& delta, const arma::mat& X, const arma::vec& W, const arma::vec& S, const arma::vec& knots, bool constantVE, double threshold, int maxit);
RcppExport SEXP _DOVE_Cox(SEXP betaSEXP, SEXP gammaSEXP, SEXP timeSEXP, SEXP deltaSEXP, SEXP XSEXP, SEXP WSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP, SEXP thresholdSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(Cox(beta, gamma, time, delta, X, W, S, knots, constantVE, threshold, maxit));
    return rcpp_result_gen;
END_RCPP
}
// Cox_noX
List Cox_noX(arma::vec& gamma, const arma::vec& time, const arma::ivec& delta, const arma::vec& W, const arma::vec& S, const arma::vec& knots, bool constantVE, double threshold, int maxit);
RcppExport SEXP _DOVE_Cox_noX(SEXP gammaSEXP, SEXP timeSEXP, SEXP deltaSEXP, SEXP WSEXP, SEXP SSEXP, SEXP knotsSEXP, SEXP constantVESEXP, SEXP thresholdSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< bool >::type constantVE(constantVESEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(Cox_noX(gamma, time, delta, W, S, knots, constantVE, threshold, maxit));
    return rcpp_result_gen;
END_RCPP
}
// iteration
List iteration(arma::mat& dt, arma::mat& DZBBy, arma::mat& X, arma::imat& indVac, arma::imat& loc, arma::mat& score2Prep, int m, arma::uvec& vac);
RcppExport SEXP _DOVE_iteration(SEXP dtSEXP, SEXP DZBBySEXP, SEXP XSEXP, SEXP indVacSEXP, SEXP locSEXP, SEXP score2PrepSEXP, SEXP mSEXP, SEXP vacSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type DZBBy(DZBBySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::imat& >::type indVac(indVacSEXP);
    Rcpp::traits::input_parameter< arma::imat& >::type loc(locSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type score2Prep(score2PrepSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type vac(vacSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration(dt, DZBBy, X, indVac, loc, score2Prep, m, vac));
    return rcpp_result_gen;
END_RCPP
}
// iteration_NoX
List iteration_NoX(arma::mat& dt, arma::mat& DZBBy, arma::imat& indVac, arma::imat& loc, arma::mat& score2Prep, int m);
RcppExport SEXP _DOVE_iteration_NoX(SEXP dtSEXP, SEXP DZBBySEXP, SEXP indVacSEXP, SEXP locSEXP, SEXP score2PrepSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type DZBBy(DZBBySEXP);
    Rcpp::traits::input_parameter< arma::imat& >::type indVac(indVacSEXP);
    Rcpp::traits::input_parameter< arma::imat& >::type loc(locSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type score2Prep(score2PrepSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration_NoX(dt, DZBBy, indVac, loc, score2Prep, m));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DOVE_BS", (DL_FUNC) &_DOVE_BS, 3},
    {"_DOVE_Cox", (DL_FUNC) &_DOVE_Cox, 11},
    {"_DOVE_Cox_noX", (DL_FUNC) &_DOVE_Cox_noX, 9},
    {"_DOVE_iteration", (DL_FUNC) &_DOVE_iteration, 8},
    {"_DOVE_iteration_NoX", (DL_FUNC) &_DOVE_iteration_NoX, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_DOVE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
